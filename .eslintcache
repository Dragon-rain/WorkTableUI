[{"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\index.js":"1","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\App.js":"2","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\Paginator\\Paginator.js":"3","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Hok\\WithSuspence.js":"4","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\NewPostForm.jsx":"5","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\Content.js":"6","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\ContentContaner.js":"7","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\Posts\\Post.js":"8","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Profile\\Profile.js":"9","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\Preloader\\Preloader.js":"10","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Profile\\ProfileContaner.js":"11","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\content-reducer.js":"12","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\redux-store.js":"13","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\reportWebVitals.js":"14","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\api\\api.js":"15","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Login\\Login.jsx":"16","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\FormsControl\\Forms-control.js":"17","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\validators\\validators.js":"18","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Registration\\Registration.jsx":"19","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\cookiesData\\cookiesData.js":"20","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\app-reducer.js":"21","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\message-reducer.js":"22","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\profile-reducer.js":"23","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\AddPostFormModal\\AddPostFormModal.js":"24","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\encryptors\\encriptors.js":"25","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\AuthFilter\\AuthFilter.js":"26","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\token-filter.js":"27","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Hok\\WithAuthRedirect.js":"28","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\utils.js":"29","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBarContaner.js":"30","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBar.js":"31","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBarForm.jsx":"32","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\PostDetails\\postDetailsContaner.js":"33","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\PostDetails\\postDetails.jsx":"34","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\PostDetails\\Picture-part.jsx":"35"},{"size":470,"mtime":1618654107990,"results":"36","hashOfConfig":"37"},{"size":2759,"mtime":1628133210758,"results":"38","hashOfConfig":"37"},{"size":1192,"mtime":1628133133440,"results":"39","hashOfConfig":"37"},{"size":274,"mtime":1606619024390,"results":"40","hashOfConfig":"37"},{"size":1669,"mtime":1606735952478,"results":"41","hashOfConfig":"37"},{"size":2574,"mtime":1628323825873,"results":"42","hashOfConfig":"37"},{"size":3332,"mtime":1628323412171,"results":"43","hashOfConfig":"37"},{"size":2091,"mtime":1628318030809,"results":"44","hashOfConfig":"37"},{"size":1593,"mtime":1632831161639,"results":"45","hashOfConfig":"37"},{"size":217,"mtime":1606619316638,"results":"46","hashOfConfig":"37"},{"size":839,"mtime":1627089424686,"results":"47","hashOfConfig":"37"},{"size":5748,"mtime":1632130430250,"results":"48","hashOfConfig":"37"},{"size":642,"mtime":1620305643521,"results":"49","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"50","hashOfConfig":"37"},{"size":4493,"mtime":1632023862967,"results":"51","hashOfConfig":"37"},{"size":1994,"mtime":1620536829561,"results":"52","hashOfConfig":"37"},{"size":2446,"mtime":1624354058247,"results":"53","hashOfConfig":"37"},{"size":276,"mtime":1606619024616,"results":"54","hashOfConfig":"37"},{"size":2987,"mtime":1626583180993,"results":"55","hashOfConfig":"37"},{"size":372,"mtime":1618036949948,"results":"56","hashOfConfig":"37"},{"size":893,"mtime":1618036622554,"results":"57","hashOfConfig":"37"},{"size":437,"mtime":1607515739230,"results":"58","hashOfConfig":"37"},{"size":4210,"mtime":1628318498630,"results":"59","hashOfConfig":"37"},{"size":5366,"mtime":1628248533242,"results":"60","hashOfConfig":"37"},{"size":197,"mtime":1607512154903,"results":"61","hashOfConfig":"37"},{"size":258,"mtime":1618124544783,"results":"62","hashOfConfig":"37"},{"size":712,"mtime":1620736423566,"results":"63","hashOfConfig":"37"},{"size":1022,"mtime":1620536033707,"results":"64","hashOfConfig":"37"},{"size":2229,"mtime":1628248342708,"results":"65","hashOfConfig":"37"},{"size":1976,"mtime":1628406959124,"results":"66","hashOfConfig":"37"},{"size":1574,"mtime":1632205914346,"results":"67","hashOfConfig":"37"},{"size":3075,"mtime":1628407238523,"results":"68","hashOfConfig":"37"},{"size":3852,"mtime":1632205404935,"results":"69","hashOfConfig":"37"},{"size":7993,"mtime":1632204772726,"results":"70","hashOfConfig":"37"},{"size":792,"mtime":1629600201583,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"eqk1nn",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"109"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":1,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\index.js",[],["161","162"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\App.js",[],["163","164"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\Paginator\\Paginator.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Hok\\WithSuspence.js",[],["165","166"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\NewPostForm.jsx",["167","168"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\Content.js",["169"],"import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport AddPostFormModal from './AddPostFormModal/AddPostFormModal';\r\nimport style from './Content.module.css';\r\nimport Post from './Posts/Post';\r\nimport { NavLink } from 'react-router-dom';\r\nimport back from '../../assets/images/left-arrow.png'\r\n\r\nconst Content = ({totalPostsCount, pageSize, currentPage, onPageChanged, posts, addPost, message, getCityList, ...props}) => {\r\n\r\n    const userPosts = () => {\r\n        if(props.isAuth) {\r\n            props.requestPosts(1, 10, \"null\", \"null\", \"null\", \"null\", props.userId)\r\n        }\r\n    }\r\n\r\n    const allPosts = () => {\r\n        props.requestPosts(1, 10, \"null\", \"null\", \"null\", \"null\")\r\n    }\r\n\r\n    return (\r\n        <div className={style.contener}>\r\n            <div className={style.contenerHead}>\r\n                {message? <span> </span> : <span className={style.paginator}>\r\n                                <Paginator totalItemsCount={totalPostsCount} pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n                            </span>}\r\n\r\n                \r\n\r\n                {props.isAuth &&<span className={style.addPostPannel}>\r\n                                    <span>\r\n                                        <AddPostFormModal \r\n                                                      cityList={props.cityList} \r\n                                                      addPost={addPost} \r\n                                                      getDistrictsListByCityId = {props.getDistrictsListByCityId}\r\n                                                      userId={props.userId}/>\r\n                                    </span>\r\n                                    <span onClick={userPosts}>\r\n                                        <NavLink to={'/'+props.userId}>Your posts: {props.userPostsCount}</NavLink>\r\n                                    </span>\r\n                                    <span onClick={allPosts}>\r\n                                        <NavLink to={'/'}>All posts</NavLink>\r\n                                    </span>\r\n                                </span>}\r\n            </div>\r\n            <div>\r\n                {message \r\n                ? <h1>{message}</h1> \r\n                : <div>\r\n                    <div>\r\n                        {posts.map(p => (\r\n                            <Post key={p.id} post={p}/>\r\n                        ))}\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Content",["170","171"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\ContentContaner.js",["172","173"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Content from './Content'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { requestPosts, addPost, getCityList, getDistrictsList } from '../../redux/content-reducer'\r\n\r\n\r\n\r\nclass ContentContaner extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize, keyword, type, cityId, districtId} = this.props;\r\n        const userId = this.props.match.params.userId\r\n        if(userId) {\r\n            this.props.requestPosts(currentPage, pageSize, keyword, type, cityId, districtId, userId)\r\n            console.log('requestUserPosts')\r\n        } else {\r\n            this.props.requestPosts(currentPage, pageSize, keyword, type, cityId, districtId, userId);\r\n            console.log('requestPosts')\r\n        }\r\n        \r\n    };\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize, keyword, type, cityId, districtId} = this.props;\r\n        const userId = this.props.match.params.userId\r\n        if(userId) {\r\n            this.props.requestPosts(pageNumber, pageSize, keyword, type, cityId, districtId, userId)\r\n        } else {\r\n            this.props.requestPosts(pageNumber, pageSize, keyword, type, cityId, districtId);\r\n        }\r\n    };\r\n\r\n    getDistrictsListByCityId = (cityId) => {\r\n        let districtsListByCityId = this.props.districtsList.filter(district => {if(district.city_id == cityId) return district})\r\n        return districtsListByCityId;\r\n    }\r\n\r\n    returnPage = () => {\r\n        this.props.history.go(-1)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Content totalPostsCount={this.props.totalPostsCount}\r\n                    pageSize = {this.props.pageSize}\r\n                    currentPage = {this.props.currentPage}\r\n                    posts = {this.props.posts}\r\n                    onPageChanged = {this.onPageChanged}\r\n                    getDistrictsListByCityId = {this.getDistrictsListByCityId}\r\n                    requestPosts = {this.props.requestPosts}\r\n                    addPost = {this.props.addPost}\r\n                    isAuth = {this.props.isAuth}\r\n                    cityList = {this.props.cityList}\r\n                    userId = {this.props.userId}\r\n                    message = {this.props.message}\r\n                    returnPage = {this.returnPage}\r\n                    userPostsCount = {this.props.userPostsCount}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    posts: state.contentPage.posts,\r\n    totalPostsCount: state.contentPage.totalPostsNumber,\r\n    pageSize: state.contentPage.pageSize,\r\n    currentPage: state.contentPage.currentPage,\r\n    isFetching: state.contentPage.faisFetchinglse,\r\n    message: state.message.message,\r\n    userId: state.profile.userId,\r\n    isAuth: state.profile.isAuth,\r\n    cityList: state.contentPage.cityList,\r\n    districtsList: state.contentPage.districtsList,\r\n    keyword: state.contentPage.keyword,\r\n    type: state.contentPage.type,\r\n    cityId: state.contentPage.cityId,\r\n    districtId: state.contentPage.districtId,\r\n    userPostsCount: state.profile.userPostsCount\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {requestPosts, addPost, getCityList, getDistrictsList}), withRouter)(ContentContaner)",["174","175"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\Posts\\Post.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Profile\\Profile.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\Preloader\\Preloader.js",["176"],"import React from 'react'\r\nimport preloader from '../../../assets/images/831.gif'\r\n\r\nlet Preloader = (props) => {\r\n    return <div> \r\n             <img src={preloader}/>\r\n        </div>\r\n}\r\n\r\nexport default Preloader;","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Profile\\ProfileContaner.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\content-reducer.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\redux-store.js",[],["177","178"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\reportWebVitals.js",[],["179","180"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\api\\api.js",["181"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Login\\Login.jsx",["182"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { reduxForm } from 'redux-form'\r\nimport { required } from '../../utils/validators/validators'\r\nimport { CreateField, Input } from '../common/FormsControl/Forms-control'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Style from '../common/FormsControl/Forms-control.module.css'\r\nimport { compose } from 'redux'\r\nimport { login } from '../../redux/profile-reducer'\r\nimport { WithAuthRedirectLogedIn } from '../Hok/WithAuthRedirect'\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    \r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                {CreateField(\"text\", \"username\", 'Email', Input, [required])}\r\n                {CreateField(\"password\", \"password\", 'Password', Input, [required])}\r\n                {captchaUrl && <img src={captchaUrl}/>}\r\n                {captchaUrl && CreateField(\"text\", \"captcha\", 'Symbols from image', Input, [required])}\r\n                {error && <div className = {Style.form_summary_error}>\r\n                    {error}\r\n                </div>}\r\n                <div>\r\n                    <button type='submit'>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const OnSubmit = (formData) => {\r\n        props.login(formData.username, formData.password, formData.captcha)\r\n    }\r\n\r\n    return (\r\n        <div className={Style.loginForm}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={OnSubmit} captchaUrl={props.captchaUrl}/>\r\n            <div className={Style.registrationButton}>\r\n                <NavLink to='/registration'> Registration </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.profile.captchaUrl,\r\n    isAuth: state.profile.isAuth\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {login}), WithAuthRedirectLogedIn)(Login);","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\FormsControl\\Forms-control.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\validators\\validators.js",[],["183","184"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Registration\\Registration.jsx",["185","186","187","188","189"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\cookiesData\\cookiesData.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\app-reducer.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\message-reducer.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\profile-reducer.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\AddPostFormModal\\AddPostFormModal.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\encryptors\\encriptors.js",[],["190","191"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\AuthFilter\\AuthFilter.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\token-filter.js",[],["192","193"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Hok\\WithAuthRedirect.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\utils.js",["194"],"export const getAge = (dateString) => {\r\n    var today = new Date();\r\n    var birthDate = new Date(dateString);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n    }\r\n    return age;\r\n}\r\n\r\nexport const time_ago =  (time) => {\r\n\r\n    switch (typeof time) {\r\n      case 'number':\r\n        break;\r\n      case 'string':\r\n        time = +new Date(time);\r\n        break;\r\n      case 'object':\r\n        if (time.constructor === Date) time = time.getTime();\r\n        break;\r\n      default:\r\n        time = +new Date();\r\n    }\r\n    var time_formats = [\r\n      [60, 'seconds', 1], // 60\r\n      [120, '1 minute ago', '1 minute from now'], // 60*2\r\n      [3600, 'minutes', 60], // 60*60, 60\r\n      [7200, '1 hour ago', '1 hour from now'], // 60*60*2\r\n      [86400, 'hours', 3600], // 60*60*24, 60*60\r\n      [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\r\n      [604800, 'days', 86400], // 60*60*24*7, 60*60*24\r\n      [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\r\n      [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\r\n      [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\r\n      [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\r\n      [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\r\n      [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\r\n      [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\r\n      [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\r\n    ];\r\n    var seconds = (+new Date() - time) / 1000,\r\n      token = 'ago',\r\n      list_choice = 1;\r\n  \r\n    if (seconds === 0) {\r\n      return 'Just now'\r\n    }\r\n    if (seconds < 0) {\r\n      seconds = Math.abs(seconds);\r\n      token = 'from now';\r\n      list_choice = 2;\r\n    }\r\n    var i = 0,\r\n      format;\r\n    while (format = time_formats[i++])\r\n      if (seconds < format[0]) {\r\n        if (typeof format[2] == 'string')\r\n          return format[list_choice];\r\n        else\r\n          return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\r\n      }\r\n    return time;\r\n}","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBarContaner.js",["195","196"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport SearchBar from './SearchBar'\r\nimport { requestPosts, setKeyword, setType, setCityId, setDistrictId } from '../../redux/content-reducer'\r\nimport { compose } from 'redux'\r\nimport { withRouter } from 'react-router'\r\n\r\nconst SearchBarContaner = (props) => {\r\n\r\n    const getDistrictsListByCityId = (cityId) => {\r\n      let districtsListByCityId = props.districtlist.filter(district => {if(district.city_id == cityId) return district})\r\n      return districtsListByCityId;\r\n    }\r\n\r\n    const searchComplete = () => {\r\n      console.log('here')\r\n      props.history.push('/')\r\n    } \r\n\r\n    return <SearchBar getDistrictsListByCityId={getDistrictsListByCityId}\r\n                      citylist={props.citylist}\r\n                      searchComplete={searchComplete}\r\n                      requestPosts={props.requestPosts}\r\n                      pageSize={props.pageSize}\r\n                      setKeyword={props.setKeyword}\r\n                      setType={props.setType}\r\n                      setCityId={props.setCityId}\r\n                      setDistrictId={props.setDistrictId}\r\n                      keyword={props.keyword}\r\n                      type={props.type}\r\n                      cityId={props.cityId}\r\n                      districtId={props.districtId}\r\n                      currentPage={props.currentPage}\r\n                      userId={props.match.params.userId}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  citylist: state.contentPage.cityList,\r\n  districtlist: state.contentPage.districtsList,\r\n  pageSize: state.contentPage.pageSize,\r\n  currentPage: state.contentPage.currentPage,\r\n  keyword: state.contentPage.keyword,\r\n  type: state.contentPage.type,\r\n  cityId: state.contentPage.cityId,\r\n  districtId: state.contentPage.districtId\r\n})\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {requestPosts, setKeyword, setType, setCityId, setDistrictId}), withRouter)(SearchBarContaner);",["197","198"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBar.js",["199"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBarForm.jsx",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\PostDetails\\postDetailsContaner.js",["200","201","202","203"],"import React from 'react';\r\nimport { connect } from \"react-redux\"\r\nimport { withRouter } from \"react-router\"\r\nimport { compose } from \"redux\"\r\nimport { MainAPI, UserApi } from \"../../../api/api\"\r\nimport { getPostById, requestPosts, saveEditedPost, deletePost } from '../../../redux/content-reducer'\r\nimport PostDetails from \"./postDetails\"\r\n\r\nclass PostDetailsContaner extends React.Component {\r\n\r\n    state = {\r\n        isMyPost: false,\r\n        pictures: [],\r\n        deletePicturesList: []\r\n    }\r\n\r\n    async getPost () {\r\n        await this.props.getPostById(this.props.match.params.id)\r\n        if(this.props.userId === this.props.post.userId) {\r\n            this.setState({isMyPost: true});\r\n        }\r\n        this.requestPictures(this.props.post.id)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getPost()\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.post.updated !== this.props.post.updated&&prevProps.post.updated!==undefined) {\r\n            this.getPost()\r\n        }\r\n    }\r\n\r\n    requestPictures (id) {\r\n        MainAPI.getPictures(id).then(\r\n            response => {\r\n                this.setState({pictures: response.data.pictures});\r\n            }\r\n        )\r\n    }\r\n\r\n    deletePictures = (deletePictureList) => {\r\n        let pictures = this.state.pictures;\r\n        deletePictureList.map(dp => {\r\n            for(let i = 0; i < pictures.length; i++){ \r\n                if ( pictures[i].id === dp) { \r\n                    pictures.splice(i, 1); \r\n                    i--; \r\n                }\r\n                \r\n            }\r\n        })\r\n        this.setState({deletePicturesList: deletePictureList})\r\n    }\r\n\r\n    getDistrictsListByCityId = (cityId) => {\r\n        let districtsListByCityId = this.props.districtsList.filter(district => {if(district.city_id == cityId) return district})\r\n        return districtsListByCityId;\r\n    }\r\n\r\n    returnPage = () => {\r\n        this.props.history.go(-1)\r\n    }\r\n\r\n    saveEdited = (post, files) => {\r\n        this.props.saveEditedPost(post, files)\r\n        if(this.state.deletePicturesList.length !==0 ) {\r\n            UserApi.deletePictures(this.state.deletePicturesList)\r\n        }\r\n    }\r\n\r\n    deletePost = (postId) => {\r\n        this.props.deletePost(postId)\r\n        this.returnPage()\r\n    }\r\n\r\n    returnPictures = () => {\r\n        this.getPost()\r\n    }\r\n\r\n    render () {\r\n        console.log('rerender in PostDetailsContaner')\r\n        return (\r\n                <PostDetails post={this.props.post}\r\n                             isMyPost={this.state.isMyPost}\r\n                             pictures={this.state.pictures}\r\n                             getDistrictsListByCityId={this.getDistrictsListByCityId}\r\n                             cityList = {this.props.cityList}\r\n                             requestPosts = {this.props.requestPosts}\r\n                             isAuth={this.props.isAuth}\r\n                             userId={this.props.userId}\r\n                             saveEdited={this.saveEdited}\r\n                             returnPage={this.returnPage}\r\n                             deletePictures={this.deletePictures}\r\n                             deletePost={this.deletePost}\r\n                             returnPictures={this.returnPictures}\r\n                             userPostsCount={this.props.userPostsCount}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    post: state.contentPage.post,\r\n    userId: state.profile.userId,\r\n    isAuth: state.profile.isAuth,\r\n    cityList: state.contentPage.cityList,\r\n    userId: state.profile.userId,\r\n    userPostsCount: state.profile.userPostsCount,\r\n    districtsList: state.contentPage.districtsList\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {getPostById, requestPosts, saveEditedPost, deletePost}), withRouter)(PostDetailsContaner)","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\PostDetails\\postDetails.jsx",["204"],"import React, { useEffect, useState } from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { time_ago } from '../../../utils/utils';\r\nimport  style  from './postDetails.module.css'\r\nimport deleteIcon from '../../../assets/images/trash.png'\r\nimport edit from '../../../assets/images/edit.png'\r\nimport back from '../../../assets/images/left-arrow.png'\r\nimport EditePicture from './Picture-part';\r\n\r\nconst PostDetails = ({post, ...props}) => {\r\n\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [districts, setDistricts] = useState([])\r\n    const [files, setFiles] = useState([])\r\n    const [deletePictureList, setdeletePictureList] = useState([])\r\n\r\n    const [id, setId] = useState(post.id)\r\n    const [title, setTitle] = useState(post.title)\r\n    const [description, setDescription] = useState(post.description)\r\n    const [type, setType] = useState(post.type)\r\n    const [cityId, setCityId] = useState(post.cityId)\r\n    const [districtId, setDistrictId] = useState(0)\r\n    const [pictures, setPictures] = useState(props.pictures)\r\n\r\n    useEffect(() => {\r\n        setTitle(post.title)\r\n        setDescription(post.description)\r\n        setType(post.type)\r\n        setPictures(props.pictures)\r\n        setId(post.id)\r\n        if(post.cityId) {\r\n            setCityId(post.cityId)\r\n            setDistricts(props.getDistrictsListByCityId(post.cityId))\r\n        }\r\n        if(post.district) {\r\n            setDistrictId(post.district.id)\r\n        }\r\n        console.log(\"setPictures\")\r\n        \r\n    }, [post, props.pictures])\r\n\r\n    const changeTitle = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n    const changeDescription = (e) => {\r\n        setDescription(e.target.value);\r\n    }\r\n    const changeType = (e) => {\r\n        setType(e.target.value);\r\n\r\n    }\r\n\r\n    const changeCity = (e) => {\r\n        let id = e.target.value\r\n        setCityId(id)\r\n        setDistricts(props.getDistrictsListByCityId(id))\r\n        if(id===\"0\") {\r\n            setDistrictId(0)\r\n            console.log(\"district id changed \", districtId)\r\n        }\r\n    }\r\n\r\n    const changeDistrict = (e) => {\r\n        setDistrictId(e.target.value);\r\n    }\r\n\r\n    const allPosts = () => {\r\n        props.requestPosts(1, 10, \"null\", \"null\", \"null\", \"null\")\r\n    }\r\n\r\n    const userPosts = () => {\r\n        if(props.isAuth) {\r\n            props.requestPosts(1, 10, \"null\", \"null\", \"null\", \"null\", props.userId)\r\n        }\r\n    }\r\n\r\n    const editModeTogle = () => {\r\n        setId(post.id)\r\n        setEditMode(true)\r\n    }\r\n\r\n    const editModeClose = () => {\r\n        setEditMode(false)\r\n        setdeletePictureList([])\r\n        props.returnPictures()\r\n    }\r\n\r\n    const changePictures = (e) => {\r\n        console.log()\r\n        setFiles(e.target.files);\r\n    }\r\n\r\n    const sendData = () => {\r\n        let now = new Date().toLocaleString()\r\n        let post = {id, title, description, type, cityId, districtId, updated: now}\r\n        props.saveEdited(post, files)\r\n        editModeClose()\r\n    }\r\n\r\n    const addToDelete = (pictureId) => {\r\n        deletePictureList.push(pictureId)\r\n        props.deletePictures(deletePictureList)\r\n    }\r\n\r\n    const deletePost = () => {\r\n        if(window.confirm(\"Delete Post?\")) {\r\n            props.deletePost(id)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.postContaner}>\r\n            <div className={style.pannel}>\r\n                <span onClick={props.returnPage}><img src={back} alt=\"\" /></span>\r\n                {props.isMyPost && <span>\r\n                    {!editMode&& <span onClick={editModeTogle}>\r\n                        <img src={edit} alt=\"\" />\r\n                    </span>}\r\n                    <span onClick={deletePost}>\r\n                        <img src={deleteIcon} alt=\"\" />\r\n                    </span>\r\n                </span>}\r\n                <span onClick={allPosts}>\r\n                    <NavLink to={'/'}>All posts</NavLink>\r\n                </span>\r\n                {props.isAuth &&<span>\r\n                                    <span onClick={userPosts}>\r\n                                        <NavLink to={'/'+props.userId}>Your posts: {props.userPostsCount}</NavLink>\r\n                                    </span>\r\n                                </span>}\r\n            </div>\r\n                                \r\n            {!editMode\r\n\r\n            ?<div className={style.post}>\r\n                <div className={style.title}>\r\n                    <h2>{title}</h2>\r\n                </div>\r\n                <div className={style.info}>\r\n                    <span>{time_ago(post.created)}</span>\r\n                    <span>Type: {type}</span>\r\n                    <span>{post.cityname}</span>\r\n                    <span>{post.district? post.district.districtName: \"\"}</span>\r\n                </div>\r\n                <div className={style.description}>\r\n                    <span>{description}</span>\r\n                </div>\r\n                <div className={style.pictures}>\r\n                    {props.pictures.map(p => (\r\n                        <span key={p.path}><img key={p.path} src={p.path} alt=''/></span>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n            :<div className={style.post}>\r\n                <div>\r\n                    <label>Title:</label><br/>\r\n                    <input type='text' name='title' maxLength={60} value={title} onChange={changeTitle}/>\r\n                </div>\r\n                <div>\r\n                    <label>Description:</label><br/>\r\n                    <textarea  name='description' maxLength={2000} value={description} onChange={changeDescription}/>\r\n                </div>\r\n                <div>\r\n                    <label>Type: </label> \r\n                    <select name='type' defaultValue={type} onChange={changeType}>\r\n                        <option key={1} value=\"other\">Choose type</option>\r\n                        <option key={2} value=\"work\">Work</option>\r\n                        <option key={3} value=\"trade\">Trade</option>\r\n                        <option key={4} value=\"service\">Service</option>\r\n                        <option key={5} value=\"rent\">Rent</option>\r\n                        <option key={6} value=\"other\">Other</option>\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>City: </label> \r\n                    <select name='city' defaultValue={cityId} onChange={changeCity}>\r\n                        <option key=\"10000\" value={0} >Choose city</option>\r\n                        {props.cityList.map(city => (\r\n                            <option value={city.id} key={city.id}>{city.cityName}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div>\r\n                    <label>District: </label> \r\n                    <select name='district' defaultValue={districtId} onChange={changeDistrict}>\r\n                        {cityId!=='' && cityId? <option value={0} key={0}>Choose district</option>: <option value={0} key={0} >Choose city first</option>}\r\n                        {cityId!=='' && cityId? districts.map(district => (\r\n                            <option value={district.id} key={district.id}>{district.districtName}</option>\r\n                        )): <option value={0} key={districts.length+1}>Choose city first</option>}\r\n                    </select>\r\n                </div>\r\n                <EditePicture addToDelete={addToDelete} pictures={pictures}/>\r\n                <div>\r\n                    <input type='file' name='files' onChange={changePictures} multiple/>\r\n                </div>\r\n                <div>\r\n                    <span>\r\n                        <button onClick={sendData}>Save</button>\r\n                    </span>\r\n                    <span>\r\n                        <button onClick={editModeClose}>Close</button>\r\n                    </span>\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostDetails","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\PostDetails\\Picture-part.jsx",[],{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"205","replacedBy":"209"},{"ruleId":"207","replacedBy":"210"},{"ruleId":"205","replacedBy":"211"},{"ruleId":"207","replacedBy":"212"},{"ruleId":"213","severity":1,"message":"214","line":43,"column":7,"nodeType":"215","messageId":"216","endLine":43,"endColumn":23},{"ruleId":"217","severity":2,"message":"218","line":45,"column":16,"nodeType":"215","messageId":"219","endLine":45,"endColumn":36},{"ruleId":"213","severity":1,"message":"220","line":7,"column":8,"nodeType":"215","messageId":"216","endLine":7,"endColumn":12},{"ruleId":"205","replacedBy":"221"},{"ruleId":"207","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":36,"column":78,"nodeType":"225","messageId":"226","endLine":36,"endColumn":80},{"ruleId":"227","severity":1,"message":"228","line":36,"column":102,"nodeType":"229","messageId":"230","endLine":36,"endColumn":104},{"ruleId":"205","replacedBy":"231"},{"ruleId":"207","replacedBy":"232"},{"ruleId":"233","severity":1,"message":"234","line":6,"column":14,"nodeType":"235","endLine":6,"endColumn":36},{"ruleId":"205","replacedBy":"236"},{"ruleId":"207","replacedBy":"237"},{"ruleId":"205","replacedBy":"238"},{"ruleId":"207","replacedBy":"239"},{"ruleId":"213","severity":1,"message":"240","line":32,"column":7,"nodeType":"215","messageId":"216","endLine":32,"endColumn":20},{"ruleId":"233","severity":1,"message":"234","line":18,"column":32,"nodeType":"235","endLine":18,"endColumn":55},{"ruleId":"205","replacedBy":"241"},{"ruleId":"207","replacedBy":"242"},{"ruleId":"213","severity":1,"message":"243","line":1,"column":28,"nodeType":"215","messageId":"216","endLine":1,"endColumn":36},{"ruleId":"233","severity":1,"message":"234","line":25,"column":32,"nodeType":"235","endLine":25,"endColumn":55},{"ruleId":"213","severity":1,"message":"244","line":39,"column":12,"nodeType":"215","messageId":"216","endLine":39,"endColumn":20},{"ruleId":"245","severity":1,"message":"246","line":45,"column":8,"nodeType":"247","endLine":45,"endColumn":18,"suggestions":"248"},{"ruleId":"217","severity":2,"message":"249","line":45,"column":9,"nodeType":"215","messageId":"219","endLine":45,"endColumn":17},{"ruleId":"205","replacedBy":"250"},{"ruleId":"207","replacedBy":"251"},{"ruleId":"205","replacedBy":"252"},{"ruleId":"207","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":57,"column":12,"nodeType":"256","messageId":"257","endLine":57,"endColumn":38},{"ruleId":"223","severity":1,"message":"224","line":11,"column":70,"nodeType":"225","messageId":"226","endLine":11,"endColumn":72},{"ruleId":"227","severity":1,"message":"228","line":11,"column":94,"nodeType":"229","messageId":"230","endLine":11,"endColumn":96},{"ruleId":"205","replacedBy":"258"},{"ruleId":"207","replacedBy":"259"},{"ruleId":"233","severity":1,"message":"234","line":14,"column":19,"nodeType":"235","endLine":14,"endColumn":36},{"ruleId":"223","severity":1,"message":"260","line":45,"column":34,"nodeType":"225","messageId":"261","endLine":45,"endColumn":36},{"ruleId":"223","severity":1,"message":"224","line":58,"column":78,"nodeType":"225","messageId":"226","endLine":58,"endColumn":80},{"ruleId":"227","severity":1,"message":"228","line":58,"column":102,"nodeType":"229","messageId":"230","endLine":58,"endColumn":104},{"ruleId":"262","severity":1,"message":"263","line":108,"column":5,"nodeType":"264","messageId":"230","endLine":108,"endColumn":11},{"ruleId":"245","severity":1,"message":"265","line":40,"column":8,"nodeType":"247","endLine":40,"endColumn":30,"suggestions":"266"},"no-native-reassign",["267"],"no-negated-in-lhs",["268"],["267"],["268"],["267"],["268"],"no-unused-vars","'NewPostReduxForm' is assigned a value but never used.","Identifier","unusedVar","no-undef","'ProfileReduxDataForm' is not defined.","undef","'back' is defined but never used.",["267"],["268"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["267"],["268"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["267"],["268"],["267"],["268"],"'adminInstance' is assigned a value but never used.",["267"],["268"],"'useState' is defined but never used.","'cityList' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. Outer scope values like 'citylist' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["269"],"'citylist' is not defined.",["267"],["268"],["267"],["268"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing",["267"],["268"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","no-dupe-keys","Duplicate key 'userId'.","ObjectExpression","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["270"],"no-global-assign","no-unsafe-negation",{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},"Update the dependencies array to be: [props]",{"range":"275","text":"276"},"Update the dependencies array to be: [post, props, props.pictures]",{"range":"277","text":"278"},[2251,2261],"[props]",[1529,1551],"[post, props, props.pictures]"]