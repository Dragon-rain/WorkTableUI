[{"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\index.js":"1","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\App.js":"2","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\Paginator\\Paginator.js":"3","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Hok\\WithSuspence.js":"4","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\NewPostForm.jsx":"5","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\Content.js":"6","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\ContentContaner.js":"7","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\Posts\\Post.js":"8","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Profile\\Profile.js":"9","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\Preloader\\Preloader.js":"10","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Profile\\ProfileContaner.js":"11","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\content-reducer.js":"12","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\redux-store.js":"13","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\reportWebVitals.js":"14","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\api\\api.js":"15","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Login\\Login.jsx":"16","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\FormsControl\\Forms-control.js":"17","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\validators\\validators.js":"18","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Registration\\Registration.jsx":"19","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\cookiesData\\cookiesData.js":"20","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\app-reducer.js":"21","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\message-reducer.js":"22","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\profile-reducer.js":"23","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\AddPostFormModal\\AddPostFormModal.js":"24","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\encryptors\\encriptors.js":"25","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\AuthFilter\\AuthFilter.js":"26","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\token-filter.js":"27","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Hok\\WithAuthRedirect.js":"28","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\utils.js":"29","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBarContaner.js":"30","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBar.js":"31","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBarForm.jsx":"32"},{"size":470,"mtime":1618654107990,"results":"33","hashOfConfig":"34"},{"size":2443,"mtime":1624184984740,"results":"35","hashOfConfig":"34"},{"size":1198,"mtime":1607335281884,"results":"36","hashOfConfig":"34"},{"size":274,"mtime":1606619024390,"results":"37","hashOfConfig":"34"},{"size":1669,"mtime":1606735952478,"results":"38","hashOfConfig":"34"},{"size":1894,"mtime":1622880162850,"results":"39","hashOfConfig":"34"},{"size":2747,"mtime":1625382703299,"results":"40","hashOfConfig":"34"},{"size":1789,"mtime":1624071262262,"results":"41","hashOfConfig":"34"},{"size":1351,"mtime":1620742341141,"results":"42","hashOfConfig":"34"},{"size":217,"mtime":1606619316638,"results":"43","hashOfConfig":"34"},{"size":604,"mtime":1620742322476,"results":"44","hashOfConfig":"34"},{"size":4548,"mtime":1625402222864,"results":"45","hashOfConfig":"34"},{"size":642,"mtime":1620305643521,"results":"46","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"34"},{"size":3403,"mtime":1625570276669,"results":"48","hashOfConfig":"34"},{"size":1994,"mtime":1620536829561,"results":"49","hashOfConfig":"34"},{"size":2446,"mtime":1624354058247,"results":"50","hashOfConfig":"34"},{"size":276,"mtime":1606619024616,"results":"51","hashOfConfig":"34"},{"size":2951,"mtime":1624175742609,"results":"52","hashOfConfig":"34"},{"size":372,"mtime":1618036949948,"results":"53","hashOfConfig":"34"},{"size":893,"mtime":1618036622554,"results":"54","hashOfConfig":"34"},{"size":437,"mtime":1607515739230,"results":"55","hashOfConfig":"34"},{"size":3648,"mtime":1620744227930,"results":"56","hashOfConfig":"34"},{"size":5327,"mtime":1623567023399,"results":"57","hashOfConfig":"34"},{"size":197,"mtime":1607512154903,"results":"58","hashOfConfig":"34"},{"size":258,"mtime":1618124544783,"results":"59","hashOfConfig":"34"},{"size":712,"mtime":1620736423566,"results":"60","hashOfConfig":"34"},{"size":1022,"mtime":1620536033707,"results":"61","hashOfConfig":"34"},{"size":2229,"mtime":1624417770990,"results":"62","hashOfConfig":"34"},{"size":1662,"mtime":1625402408786,"results":"63","hashOfConfig":"34"},{"size":1303,"mtime":1625402430953,"results":"64","hashOfConfig":"34"},{"size":3356,"mtime":1625464708113,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"eqk1nn",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"95"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"71"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\index.js",[],["150","151"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\App.js",[],["152","153"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\Paginator\\Paginator.js",[],["154","155"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Hok\\WithSuspence.js",[],["156","157"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\NewPostForm.jsx",["158","159"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\Content.js",["160","161"],"import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport AddPostFormModal from './AddPostFormModal/AddPostFormModal';\r\nimport style from './Content.module.css';\r\nimport Post from './Posts/Post';\r\n\r\nconst Content = ({totalPostsCount, pageSize, currentPage, onPageChanged, posts, addPost, message, getCityList, ...props}) => {\r\n\r\n    return (\r\n        <div className={style.contener}>\r\n            <div>\r\n                {props.isAuth &&<div className={style.addPostButtom}>\r\n                                    <AddPostFormModal getCityById={props.getCityById} \r\n                                                      getDistrictsListByCityId={props.getDistrictsListByCityId} \r\n                                                      cityList={props.cityList} \r\n                                                      addPost={addPost} \r\n                                                      districtsList={props.districtsList}\r\n                                                      getDistrictsListByCityId = {props.getDistrictsListByCityId}\r\n                                                      getCityById={props.getCityById}\r\n                                                      userId={props.userId}/>\r\n                                                      \r\n                                </div>}\r\n            </div>\r\n            {message \r\n            ? <h1>{message}</h1> \r\n            : <div>\r\n                <div className={style.paginator}>\r\n                    <Paginator totalItemsCount={totalPostsCount} pageSize={pageSize} currentPage={currentPage} onPageChanged={onPageChanged}/>\r\n                </div>\r\n                <div>\r\n                    {posts.map(p => (\r\n                        <Post key={p.id} post={p}/>\r\n                    ))}\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Content",["162","163"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\ContentContaner.js",["164","165","166"],"import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Content from './Content'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { requestPosts, addPost, getCityList, getDistrictsList } from '../../redux/content-reducer'\r\n\r\n\r\n\r\nclass ContentContaner extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.requestPosts(currentPage, pageSize);\r\n        \r\n    };\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize, keyword, type, cityId, districtId} = this.props;\r\n        this.props.requestPosts(pageNumber, pageSize, keyword, type, cityId, districtId);\r\n    };\r\n\r\n    getDistrictsListByCityId = (cityId) => {\r\n        let districtsListByCityId = this.props.districtsList.filter(district => {if(district.city_id == cityId) return district})\r\n        return districtsListByCityId;\r\n    }\r\n\r\n    getCityById = (cityId) => {\r\n        const city = this.props.cityList.find(citys => {if(citys.id === cityId) return citys})\r\n        console.log(city)\r\n        return city;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Content totalPostsCount={this.props.totalPostsCount}\r\n                    pageSize = {this.props.pageSize}\r\n                    currentPage = {this.props.currentPage}\r\n                    posts = {this.props.posts}\r\n                    onPageChanged = {this.onPageChanged}\r\n                    getDistrictsListByCityId = {this.getDistrictsListByCityId}\r\n                    getCityById = {this.getCityById}\r\n                    addPost = {this.props.addPost}\r\n                    isAuth = {this.props.isAuth}\r\n                    cityList = {this.props.cityList}\r\n                    districtsList = {this.props.districtsList}\r\n                    userId = {this.props.userId}\r\n                    message = {this.props.message}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    posts: state.contentPage.posts,\r\n    totalPostsCount: state.contentPage.totalPostsNumber,\r\n    pageSize: state.contentPage.pageSize,\r\n    currentPage: state.contentPage.currentPage,\r\n    isFetching: state.contentPage.faisFetchinglse,\r\n    message: state.message.message,\r\n    userId: state.profile.userId,\r\n    isAuth: state.profile.isAuth,\r\n    cityList: state.contentPage.cityList,\r\n    districtsList: state.contentPage.districtsList,\r\n    keyword: state.contentPage.keyword,\r\n    type: state.contentPage.type,\r\n    cityId: state.contentPage.cityId,\r\n    districtId: state.contentPage.districtId\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {requestPosts, addPost, getCityList, getDistrictsList}), withRouter)(ContentContaner)","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\Posts\\Post.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Profile\\Profile.js",[],["167","168"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\Preloader\\Preloader.js",["169"],"import React from 'react'\r\nimport preloader from '../../../assets/images/831.gif'\r\n\r\nlet Preloader = (props) => {\r\n    return <div> \r\n             <img src={preloader}/>\r\n        </div>\r\n}\r\n\r\nexport default Preloader;",["170","171"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Profile\\ProfileContaner.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\content-reducer.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\redux-store.js",[],["172","173"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\reportWebVitals.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\api\\api.js",["174"],"import axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\nimport tokenFilter from '../utils/token-filter'\r\n\r\nconst x_token = Cookies.get(\"token\")\r\nconst x_refresh_token = Cookies.get(\"refreshToken\")\r\nconst username = Cookies.get('username')\r\n\r\nconst mainInstance = axios.create({\r\n    baseURL: 'http://localhost:8080/main/'\r\n})\r\n\r\nconst authInstance = axios.create({\r\n    baseURL: 'http://localhost:8080/auth/'\r\n})\r\n\r\nconst authInstanceRefresh = axios.create({\r\n    baseURL: 'http://localhost:8080/auth/',\r\n    headers: {\r\n        RefreshToken: 'Bearer '+ x_refresh_token\r\n    }\r\n})\r\n\r\nconst userInstance = axios.create({\r\n    baseURL: 'http://localhost:8080/user/',\r\n    headers: {\r\n        Authorization: 'Bearer '+ x_token\r\n    }\r\n    \r\n})\r\n\r\nconst adminInstance = axios.create({\r\n    baseURL: 'https://localhost:8080/admin/',\r\n    headers: {\r\n        Authorization: 'Bearer '+ x_token\r\n    }\r\n    \r\n})\r\n\r\n\r\n//inerseptor\r\nuserInstance.interceptors.response.use(response => {\r\n    return response;\r\n    },\r\n    async (error) => {\r\n        console.log(error)\r\n       await tokenFilter(error)\r\n    }\r\n)\r\n\r\nexport const AuthAPI = {\r\n\r\n    login(username, password, captcha=null) {\r\n        return authInstance.post(`login`, {username, password, captcha});\r\n    },\r\n\r\n    registration(username, password, firstName, lastName, dob, gender, currentCity) {\r\n        return authInstance.post(`registration`, {username, password, firstName, lastName, dob, gender, currentCity});\r\n    },\r\n\r\n    getUser(username) {\r\n        return authInstance.post(`authme`, {username});\r\n    }, \r\n\r\n    refresh() {\r\n        return authInstanceRefresh.post(`refresh`, {username})\r\n    },\r\n\r\n    logout() {\r\n        return authInstance.post(`logout`, {username})\r\n    }\r\n\r\n}\r\n\r\nexport const MainAPI = {\r\n\r\n    getAllPosts(currentPage = 1, pageSize = 10, keyword = \"null\", type = \"null\", cityId = \"null\", districtId = \"null\") {\r\n        return mainInstance.post(`posts`, {currentPage, pageSize, keyword, type, cityId ,districtId});\r\n    },\r\n\r\n    getPictures(name) {\r\n        return mainInstance.get(`pictures?name=${name}`)\r\n    },\r\n\r\n    getCityList() {\r\n        return mainInstance.get(`city/list`)\r\n    },\r\n\r\n    getDistrictsList() {\r\n        return mainInstance.get(`district/list`)\r\n    }\r\n\r\n\r\n};\r\n\r\nexport const UserApi = {\r\n    postPost(type, title, description, userId, cityId, districtId, newfiles) {\r\n        console.log(Cookies.get(\"token\"))\r\n        /*let data = JSON.stringify({\r\n            'type': type, \r\n            'title': title, \r\n            'description': description,\r\n            'userId': userId,\r\n            'cityId': cityId,\r\n            'districtId': districtId\r\n        });*/\r\n        const files = new FormData();\r\n        for(let i = 0; i < newfiles.length; i++) {\r\n            files.append(\"files\", newfiles[i], newfiles[i].name)\r\n        }\r\n        return userInstance.put(`addpost`, {type, title, description, userId, cityId, districtId, files}, {\r\n            headers: {\r\n                'Content-Type' : undefined\r\n            }\r\n        })\r\n    },\r\n\r\n    addProfilePicture(file) {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file)\r\n\r\n        return userInstance.put(`addProfilePicture`, formData, {\r\n            headers: {\r\n                'Content-Type' : 'multipart/form-data',\r\n                'username' : username\r\n            }\r\n        })\r\n    }\r\n\r\n}","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Login\\Login.jsx",["175"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { reduxForm } from 'redux-form'\r\nimport { required } from '../../utils/validators/validators'\r\nimport { CreateField, Input } from '../common/FormsControl/Forms-control'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Style from '../common/FormsControl/Forms-control.module.css'\r\nimport { compose } from 'redux'\r\nimport { login } from '../../redux/profile-reducer'\r\nimport { WithAuthRedirectLogedIn } from '../Hok/WithAuthRedirect'\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    \r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                {CreateField(\"text\", \"username\", 'Email', Input, [required])}\r\n                {CreateField(\"password\", \"password\", 'Password', Input, [required])}\r\n                {captchaUrl && <img src={captchaUrl}/>}\r\n                {captchaUrl && CreateField(\"text\", \"captcha\", 'Symbols from image', Input, [required])}\r\n                {error && <div className = {Style.form_summary_error}>\r\n                    {error}\r\n                </div>}\r\n                <div>\r\n                    <button type='submit'>Login</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const OnSubmit = (formData) => {\r\n        props.login(formData.username, formData.password, formData.captcha)\r\n    }\r\n\r\n    return (\r\n        <div className={Style.loginForm}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={OnSubmit} captchaUrl={props.captchaUrl}/>\r\n            <div className={Style.registrationButton}>\r\n                <NavLink to='/registration'> Registration </NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.profile.captchaUrl,\r\n    isAuth: state.profile.isAuth\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {login}), WithAuthRedirectLogedIn)(Login);",["176","177"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\common\\FormsControl\\Forms-control.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\validators\\validators.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Registration\\Registration.jsx",["178","179","180"],"import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { reduxForm } from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\r\nimport { CreateField, Input, SelectCity, InputDisableAutoComplete } from '../common/FormsControl/Forms-control'\r\nimport Style from '../common/FormsControl/Forms-control.module.css'\r\nimport { registration } from '../../redux/profile-reducer'\r\nimport { getCityList } from '../../redux/content-reducer'\r\nimport { compose } from 'redux'\r\nimport { WithAuthRedirectLogedIn } from '../Hok/WithAuthRedirect'\r\n\r\nconst RegistrationForm = ({handleSubmit, error, captchaUrl, citylist}) => {\r\n    \r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                {CreateField(\"email\", \"username\", 'Email', InputDisableAutoComplete, [required, maxLengthCreator(50)])}\r\n                {CreateField(\"password\", \"password\", 'Password', InputDisableAutoComplete, [required])}\r\n                {CreateField(\"password\", \"null\", 'Repeat Password', Input, [required])}\r\n                {CreateField(\"text\", \"firstName\", 'Your first name', Input, [required])}\r\n                {CreateField(\"text\", \"lastName\", 'Your last name', Input, [required])}\r\n                {CreateField(\"date\", \"dob\", null, Input, [required])}\r\n                {CreateField(\"radio\", \"gender\", null, Input, [required], {value: 'man'}, \"Man\")}\r\n                {CreateField(\"radio\", \"gender\", null, Input, [required], {value: 'woman'}, \"Woman\")}\r\n                {CreateField(null, \"currentCity\", null, SelectCity, null, {citylist: citylist})}\r\n                {captchaUrl && <img src={captchaUrl}/>}\r\n                {captchaUrl && CreateField(\"text\", \"captcha\", 'Symbols from image', Input, [required])}\r\n                {error && alert(error)}\r\n                <div>\r\n                    <button type='submit'>Registration</button>\r\n                </div>\r\n            </form>\r\n    )\r\n}\r\n\r\nconst RegistrationReduxForm = reduxForm({form: 'registrationform'})(RegistrationForm)\r\n\r\nconst Registration = (props) => {\r\n\r\n    const [citylist, setCitylist] = useState(props.citylist)\r\n\r\n    useEffect(() => {\r\n        props.getCityList();\r\n    }, [citylist])\r\n\r\n    const OnSubmit = (formData) => {\r\n        props.registration(formData.username, formData.password, formData.firstName, formData.lastName, formData.dob, formData.gender, formData.currentCity)\r\n    }\r\n\r\n    return (\r\n        <div className={Style.loginForm}>\r\n            <h1>Registration</h1>\r\n            <RegistrationReduxForm onSubmit={OnSubmit} captchaUrl={props.captchaUrl} citylist={props.citylist}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.profile.captchaUrl,\r\n    isAuth: state.profile.isAuth,\r\n    citylist: state.contentPage.cityList\r\n})\r\n\r\nexport default compose(connect(mapStateToProps, {registration, getCityList}), WithAuthRedirectLogedIn)(Registration);","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\cookiesData\\cookiesData.js",[],["181","182"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\app-reducer.js",[],["183","184"],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\message-reducer.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\redux\\profile-reducer.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Content\\AddPostFormModal\\AddPostFormModal.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\encryptors\\encriptors.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\AuthFilter\\AuthFilter.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\token-filter.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\Hok\\WithAuthRedirect.js",[],"C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\utils\\utils.js",["185"],"export const getAge = (dateString) => {\r\n    var today = new Date();\r\n    var birthDate = new Date(dateString);\r\n    var age = today.getFullYear() - birthDate.getFullYear();\r\n    var m = today.getMonth() - birthDate.getMonth();\r\n    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n        age--;\r\n    }\r\n    return age;\r\n}\r\n\r\nexport const time_ago =  (time) => {\r\n\r\n    switch (typeof time) {\r\n      case 'number':\r\n        break;\r\n      case 'string':\r\n        time = +new Date(time);\r\n        break;\r\n      case 'object':\r\n        if (time.constructor === Date) time = time.getTime();\r\n        break;\r\n      default:\r\n        time = +new Date();\r\n    }\r\n    var time_formats = [\r\n      [60, 'seconds', 1], // 60\r\n      [120, '1 minute ago', '1 minute from now'], // 60*2\r\n      [3600, 'minutes', 60], // 60*60, 60\r\n      [7200, '1 hour ago', '1 hour from now'], // 60*60*2\r\n      [86400, 'hours', 3600], // 60*60*24, 60*60\r\n      [172800, 'Yesterday', 'Tomorrow'], // 60*60*24*2\r\n      [604800, 'days', 86400], // 60*60*24*7, 60*60*24\r\n      [1209600, 'Last week', 'Next week'], // 60*60*24*7*4*2\r\n      [2419200, 'weeks', 604800], // 60*60*24*7*4, 60*60*24*7\r\n      [4838400, 'Last month', 'Next month'], // 60*60*24*7*4*2\r\n      [29030400, 'months', 2419200], // 60*60*24*7*4*12, 60*60*24*7*4\r\n      [58060800, 'Last year', 'Next year'], // 60*60*24*7*4*12*2\r\n      [2903040000, 'years', 29030400], // 60*60*24*7*4*12*100, 60*60*24*7*4*12\r\n      [5806080000, 'Last century', 'Next century'], // 60*60*24*7*4*12*100*2\r\n      [58060800000, 'centuries', 2903040000] // 60*60*24*7*4*12*100*20, 60*60*24*7*4*12*100\r\n    ];\r\n    var seconds = (+new Date() - time) / 1000,\r\n      token = 'ago',\r\n      list_choice = 1;\r\n  \r\n    if (seconds === 0) {\r\n      return 'Just now'\r\n    }\r\n    if (seconds < 0) {\r\n      seconds = Math.abs(seconds);\r\n      token = 'from now';\r\n      list_choice = 2;\r\n    }\r\n    var i = 0,\r\n      format;\r\n    while (format = time_formats[i++])\r\n      if (seconds < format[0]) {\r\n        if (typeof format[2] == 'string')\r\n          return format[list_choice];\r\n        else\r\n          return Math.floor(seconds / format[2]) + ' ' + format[1] + ' ' + token;\r\n      }\r\n    return time;\r\n}","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBarContaner.js",["186","187"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport SearchBar from './SearchBar'\r\nimport { requestPosts, setKeyword, setType, setCityId, setDistrictId } from '../../redux/content-reducer'\r\n\r\nconst SearchBarContaner = (props) => {\r\n\r\n    const getDistrictsListByCityId = (cityId) => {\r\n      let districtsListByCityId = props.districtlist.filter(district => {if(district.city_id == cityId) return district})\r\n      return districtsListByCityId;\r\n    }\r\n\r\n    return <SearchBar getDistrictsListByCityId={getDistrictsListByCityId}\r\n                      citylist={props.citylist}\r\n                      requestPosts={props.requestPosts}\r\n                      pageSize={props.pageSize}\r\n                      setKeyword={props.setKeyword}\r\n                      setType={props.setType}\r\n                      setCityId={props.setCityId}\r\n                      setDistrictId={props.setDistrictId}\r\n                      keyword={props.keyword}\r\n                      type={props.type}\r\n                      cityId={props.cityId}\r\n                      districtId={props.districtId}\r\n                      currentPage={props.currentPage}/>\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  citylist: state.contentPage.cityList,\r\n  districtlist: state.contentPage.districtsList,\r\n  pageSize: state.contentPage.pageSize,\r\n  currentPage: state.contentPage.currentPage,\r\n  keyword: state.contentPage.keyword,\r\n  type: state.contentPage.type,\r\n  cityId: state.contentPage.cityId,\r\n  districtId: state.contentPage.districtId\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {requestPosts, setKeyword, setType, setCityId, setDistrictId})(SearchBarContaner);","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBar.js",["188"],"import React from 'react'\r\nimport Logo from '../../assets/images/Logo-1.png'\r\nimport Style from './SearchBar.module.css'\r\nimport SearchBarReduxForm from './SearchBarForm'\r\n\r\nconst SearchBar = (props) => {\r\n\r\n  return(\r\n    <div className={Style.searhBar}>\r\n      <div className={Style.contentWraper}>\r\n        <div className={Style.logo}>\r\n          <img src={Logo}/>\r\n          <h2>Work Table</h2>\r\n        </div>\r\n        <div>\r\n          <SearchBarReduxForm requestPosts={props.requestPosts} \r\n                              getDistrictsListByCityId={props.getDistrictsListByCityId} \r\n                              citylist={props.citylist} \r\n                              pageSize={props.pageSize}\r\n                              setKeyword={props.setKeyword}\r\n                              setType={props.setType}\r\n                              setCityId={props.setCityId}\r\n                              setDistrictId={props.setDistrictId}\r\n                              keyword={props.keyword}\r\n                              type={props.type}\r\n                              cityId={props.cityId}\r\n                              districtId={props.districtId}\r\n                              currentPage={props.currentPage}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBar","C:\\Users\\Acer\\work\\ReactProjects\\dev\\WorkTable\\work-table-ui\\src\\components\\SearchBar\\SearchBarForm.jsx",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"189","replacedBy":"193"},{"ruleId":"191","replacedBy":"194"},{"ruleId":"189","replacedBy":"195"},{"ruleId":"191","replacedBy":"196"},{"ruleId":"189","replacedBy":"197"},{"ruleId":"191","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":43,"column":7,"nodeType":"201","messageId":"202","endLine":43,"endColumn":23},{"ruleId":"203","severity":2,"message":"204","line":45,"column":16,"nodeType":"201","messageId":"205","endLine":45,"endColumn":36},{"ruleId":"206","severity":1,"message":"207","line":18,"column":55,"nodeType":"208","endLine":18,"endColumn":114},{"ruleId":"206","severity":1,"message":"207","line":19,"column":55,"nodeType":"208","endLine":19,"endColumn":86},{"ruleId":"189","replacedBy":"209"},{"ruleId":"191","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":24,"column":78,"nodeType":"213","messageId":"214","endLine":24,"endColumn":80},{"ruleId":"215","severity":1,"message":"216","line":24,"column":102,"nodeType":"217","messageId":"218","endLine":24,"endColumn":104},{"ruleId":"211","severity":1,"message":"219","line":29,"column":53,"nodeType":"213","messageId":"214","endLine":29,"endColumn":55},{"ruleId":"189","replacedBy":"220"},{"ruleId":"191","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":6,"column":14,"nodeType":"224","endLine":6,"endColumn":36},{"ruleId":"189","replacedBy":"225"},{"ruleId":"191","replacedBy":"226"},{"ruleId":"189","replacedBy":"227"},{"ruleId":"191","replacedBy":"228"},{"ruleId":"199","severity":1,"message":"229","line":32,"column":7,"nodeType":"201","messageId":"202","endLine":32,"endColumn":20},{"ruleId":"222","severity":1,"message":"223","line":18,"column":32,"nodeType":"224","endLine":18,"endColumn":55},{"ruleId":"189","replacedBy":"230"},{"ruleId":"191","replacedBy":"231"},{"ruleId":"222","severity":1,"message":"223","line":25,"column":32,"nodeType":"224","endLine":25,"endColumn":55},{"ruleId":"199","severity":1,"message":"232","line":39,"column":22,"nodeType":"201","messageId":"202","endLine":39,"endColumn":33},{"ruleId":"233","severity":1,"message":"234","line":43,"column":8,"nodeType":"235","endLine":43,"endColumn":18,"suggestions":"236"},{"ruleId":"189","replacedBy":"237"},{"ruleId":"191","replacedBy":"238"},{"ruleId":"189","replacedBy":"239"},{"ruleId":"191","replacedBy":"240"},{"ruleId":"241","severity":1,"message":"242","line":57,"column":12,"nodeType":"243","messageId":"244","endLine":57,"endColumn":38},{"ruleId":"211","severity":1,"message":"212","line":9,"column":70,"nodeType":"213","messageId":"214","endLine":9,"endColumn":72},{"ruleId":"215","severity":1,"message":"216","line":9,"column":94,"nodeType":"217","messageId":"218","endLine":9,"endColumn":96},{"ruleId":"222","severity":1,"message":"223","line":12,"column":11,"nodeType":"224","endLine":12,"endColumn":28},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],["245"],["246"],["245"],["246"],["245"],["246"],"no-unused-vars","'NewPostReduxForm' is assigned a value but never used.","Identifier","unusedVar","no-undef","'ProfileReduxDataForm' is not defined.","undef","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["245"],["246"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.find() expects a value to be returned at the end of arrow function.",["245"],["246"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["245"],["246"],["245"],["246"],"'adminInstance' is assigned a value but never used.",["245"],["246"],"'setCitylist' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["247"],["245"],["246"],["245"],["246"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-global-assign","no-unsafe-negation",{"desc":"248","fix":"249"},"Update the dependencies array to be: [citylist, props]",{"range":"250","text":"251"},[2215,2225],"[citylist, props]"]